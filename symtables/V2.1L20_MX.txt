/begin0
T 1
* 00000010:000000C1
# 
R 
L SYSROM:Native Mode Entry
P 
% 0
M 0
/end
/begin0
T 2
* 00000010:000003A5
# 
R 
L SYSROM:DRAW_MEMORY_TEST_MESSAGE
P 
% 0
M 0
/end
/begin0
T 2
* 00000010:00000493
# 
R 
L SYSROM:MEMORY_TEST_FAILED
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:000004E9
# 
R 
L SYSROM:(PROB)MEMORY_TEST_FROM_EDI_FOR_ECX_BYTES
P 
% 0
M 0
/end
/begin0
T 2
* 00000010:0000053F
# 
R 
L SYSROM:MEMTEST_CHECK_READ_BACK
P 
% 0
M 0
/end
/begin0
T 2
* 00000010:000005CD
# 
R 
L SYSROM:(PROB)RETURN_MEMTEST_FAILURE
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00000607
# 
R 
L SYSROM:(PROB)DRAW_MESSAGE_BY_NUMBER
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00000B16
# ECX=Boot Key Combination
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00000B5E
# Check Boot Key Combination
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00000B79
# Setting One-Time Boot Device
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00000B80
# 4C00H=Keyboard Icon
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00000BD2
# 4A00H=JoyPad Icon
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00000D2E
# 4A00H=JoyPad Icon
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:000012F6
# 
R 
L SYSROM:Machine Identification?
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:0000136C
# 
R 
L SYSROM:Read Pad0 Trigger Bits in AL
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00001415
# 
R 
L SYSROM:(Prob)Draw Icon
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00001D41
# 
R 
L SYSROM:Get Keyboard State EBX=0b43210MNBVCXZLKJHGFDSAPOIUYTREWQ
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001DA4
# Keyboard Command A1=Reset
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00001DB1
# 
R 
L SYSROM:Disable Keyboard IRQ and NMI
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00001DC1
# 
R 
L SYSROM:(Prob)Get 16-bit Key code
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001DC6
# DH=Incoming_AH
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001DC8
# Keyboard Command A0=Undocumented
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001DD0
# 1388H=5000
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001DDB
# Keyboard Command A1=Reset
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001DFA
# Check OBF (Keycode)
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001DFD
# Jump if no keycode
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001E1E
# Restore Incoming_AH
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00001E26
# 
R 
L SYSROM:Wait IBF ready, then Write Keyboard Command(AL)
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00001E41
# 
R 
L SYSROM:(Prob)Inkey AH=Keyboard Status 602H, AL=Keycode 600H
P 
% 0
M 0
/end
/begin0
T 2
* 00000010:00001E4B
# 
R 
L Wait for Keyboard Buffer
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001E56
# Keyboard Status
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001E5E
# Check OBF (Output Buffer)
R 
L 
P 
% 0
M 0
/end
/begin0
T 2
* 00000010:00001E6A
# 
R 
L OBF=1 or TimeOut
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00001E81
# 
R 
L SYSROM:Keycode to Flag|0b43210MNBVCXZLKJHGFDSAPOIUYTREWQ
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001E83
# 11H='Q'
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001E87
# 1AH='P'
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001E8B
# Q->00H
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001E8F
# 1EH='A'
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001E93
# 26H='L'
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001E97
# A->0AH
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001E9B
# 2AH='Z'
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001E9F
# 30H='M'
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001EA3
# Z->13H
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001EA7
# 0BH='0'
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001EAB
# 0->1AH
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001EAF
# 02H='1'
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001EB3
# 05H='4'
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001EB7
# 4->1EH
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00001EDD
# 
R 
L SYSROM:Wait
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00001EFF
# 
R 
L SYSROM:Wait by Freerun Timer
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00001F32
# 
R 
L SYSROM:(PROB)DRAW_STRING
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001F44
# CRTC Control?
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001F5C
# (Prob)X
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001F6E
# (Prob)Y
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001F7F
# (Prob)Strlen
R 
L 
P 
% 0
M 0
/end
/begin0
T 2
* 00000010:00001F85
# 
R 
L SYSROM:DRAW_FONT_LOOP
P 
% 0
M 0
/end
/begin0
T 2
* 00000010:00001FD0
# 
R 
L SYSROM:HALT_AFTER_ERROR
P 
% 0
M 0
/end
/begin0
T 2
* 00000010:00001FD4
# 
R 
L SYSROM:Draw Half Pitch Font
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001FD6
# CB000H:Mapped Half-Pitch Font
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00001FDF
# AX=ASCIICode*16
R 
L 
P 
% 0
M 0
/end
/begin0
T 2
* 00000010:00001FF5
# 
R 
L SYSROM:(PROB)DRAW_HALF_PITCH_FONT_LOOP
P 
% 0
M 0
/end
/begin0
T 0
* 00000010:00002027
# FDA0H CRT Output Control
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00002031
# 
R 
L SYSROM:CRTC Control?
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:0000219D
# 
R 
L SYSROM:MA/MX HIGHRES Control
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00002442
# 
R 
L SYSROM:SET_PALETTE
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:000024D0
# 
R 
L SYSROM:(PROB)SJIS_TO_JIS
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:00002501
# 
R 
L SYSROM:Check Shift-JIS or ASCII
P 
% 0
M 0
/end
/begin0
T 1
* 00000010:0000251C
# 
R 
L SYSROM:Accessing unknown I/O 479H-4FH
P 
% 0
M 0
/end
/begin0
T 1
* 0000005D:0000020C
# 
R 
L INT 46H(FDC)
P 
% 0
M 0
/end
/begin0
T 0
* 0000005D:0000028B
# Jump to each interrupt
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000110:00005728
# 
R 
L TBIOS:Draw_Mouse_Icon
P 
% 0
M 0
/end
/begin0
T 0
* 00000110:00007B43
# 
R 
L TBIOS:Put_32Pixel_1Bit_Pattern_In_EAX
P 
% 0
M 0
/end
/begin0
T 0
* 00000110:0000D1E4
# 
R 
L TBIOS:BitBlt
P 
% 0
M 0
/end
/begin0
T 0
* 00000110:00011B60
# 
R 
L TBIOS:MouseBIOS
P 
% 0
M 0
/end
/begin0
T 0
* 00000110:00011D50
# 
R 
L TBIOS:MOS_rdpos
P 
% 0
M 0
/end
/begin0
T 0
* 00000110:00012814
# 
R 
L TBIOS:Mouse:Read_Mouse_Motion
P 
% 0
M 0
/end
/begin0
T 1
* 0000039A:00000458
# 
R 
L Wait by I/O 006CH
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000000BD
# 
R 
L DISKBIOS:BRANCH_TO_DEVICE
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000000E2
# [BP+03H]=Incoming AH
R 
L 
P 
% 0
M 0
/end
/begin0
T 2
* 00000421:000000EB
# 
R 
L DISKBIOS:Branch to Function
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:000001F8
# 
R 
L DISKBIOS:AH=02H Get Disk Status
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000205
# [BP+06H]=Incoming CX
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000209
# [BP+02H]=Incoming AL
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000020C
# Restore
R 
L 
P 
% 0
M 0
/end
/begin0
T 2
* 00000421:00000243
# Track 0
R 
L DISKBIOS:(Prob)Find Media Type Loop?
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000245
# Side 0
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000247
# DS:[0040H-] Buffer for sector info.
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000024F
# Read Address Marks
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000251
# DS:[044EH]=Error Code
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000292
# [BP+02H]=Incoming AL
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000295
# AL=Drive
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000002AE
# Bit2:Double-Sided
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000002C6
# [BP+8]=Outgoing DL
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:000002F3
# 
R 
L DISKBIOS:(Prob)Cycle media type?
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:0000036C
# 
R 
L DISKBIOS:AH=09H Read Sector Info
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000003BE
# DSKCHG flag
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:0000053A
# 
R 
L DISKBIOS:Get Drive-Status Structure Pointer in SI (AL=drive)
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000069E
# [044DH]=Error Code
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000072A
# (Prob)Device Number Error
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000791
# 
R 
L DISKBIOS:(Prob)Clear Timer [0441H] ?BL=02H?
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:0000079A
# 
R 
L DISKBIOS:(Prob)Clear Timer [0440H] ?BL=02H?
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000007CE
# (Prob)AL=Incoming AL
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000858
# Tentatively no error
R 
L DISKBIOS:Wait for DMA transfer
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000085E
# Tentatively no error
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000867
# CS:0D17 is a callback function (7FH->DS:[0443H])
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000086A
# (Prob)012CH=300 ticks
R 
L 
P 
% 0
M 0
/end
/begin0
T 2
* 00000421:00000873
# DS:[0487H] is cleared in FDC IRQ.
R 
L Wait timer up or command finished
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000881
# (Prob)Error Details=Time Over
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000887
# (Prob)Hard Error
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000008A1
# DS:[0453H] is the zero-ext of last FDC status (I/O 0200H)
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000008A4
# Clear INDEX/DRQ
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000008AC
# Clear except NOTRDY,RECNOTFOUND,CRCERR,BUSY
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000008CD
# [044DH]=Error code
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000008EA
# (Prob)[SI+02H]=Value written to I/O 020CH
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000093E
# (Prob)[SI+0BH] is track.
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000A56
# 
R 
L DISKBIOS:(Prob)Reset MODE-B and HISPD for all drives.
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000A59
# (Prob)DS:[04D2H-] Pointers for drive-info structures.
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000A8C
# 
R 
L DISKBIOS:Wait drive ready
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000A91
# Jump if busy
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000AEE
# 
R 
L DISKBIOS:Issue FDC Command
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000AF1
# (Prob)[SI+03H] remembers last-issued FDC command.
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000B97
# 
R 
L DISKBIOS:Check Disk Change if [SI]==1
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000BA8
# 
R 
L DISKBIOS:Select Side([BP+09H])
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000BB7
# (Prob)[SI+01H] is value written to I/O 0208H
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000BC5
# 
R 
L DISKBIOS:Wait for 59us or 100us
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000BD1
# (Prob)Wait for 59(3BH) or 100(64H)us
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000BDB
# 
R 
L DISKBIOS:Read I/O 200H (FDC Status) in AL
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000BE0
# 
R 
L DISKBIOS:Read I/O 208H 3 times.
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000BE7
# 
R 
L DISKBIOS:Check DMA Error
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000BF9
# 
R 
L DISKBIOS:Write AL to I/O 0208H (Drive Control)
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000BFE
# 
R 
L DISKBIOS:Select Drive and Latch HISPD and MODE-B
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000C0D
# 
R 
L DISKBIOS:Unsel Drv, Select Drv,Latch MODE-B and HISPD, then Unsel Drv.
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000C1A
# 
R 
L DISKBIOS:Wait drv ready, Enable IRQ, then write command
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000C22
# (Prob)[SI+01H] remembers value written to I/O 0208H
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000C33
# 
R 
L DISKBIOS:Zero-Ext Status Byte (I/O 200H) to DS:[453H], then FDC CMD D0H(abort).
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000C4D
# 
R 
L DISKBIOS:Write AL to I/O 202H (Track)
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000C52
# 
R 
L DISKBIOS:Write AL to I/O 206H (Data)
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000C67
# 
R 
L DISKBIOS:Setup DMA
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000D17
# 
R 
L DISKBIOS:Callback 7FH->0D47:[0443H]
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000D21
# 
R 
L DISKBIOS:Set up timer.
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000D78
# 
R 
L DISKBIOS:(Prob)Clear Timer
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000D7D
# [0443H] is timer-up flag. 80=Not yet  7F=Up
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000D89
# [0443H] is timer-up flag. 80=Not yet  7F=Up
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00000D93
# 
R 
L DISKBIOS:Floppy Disk IRQ Handler
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00000D97
# (Prob)DS:[0457H]=Drive?
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001181
# (Prob)AH=Status Byte
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001186
# (Prob)AL=Message Byte
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:0000126D
# 
R 
L DISKBIOS:Set up timer
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000126E
# Call back. IF [0529H]==80H THEN [0529H]=81H
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:000012D7
# 
R 
L DISKBIOS:SCSI (Prob) Issue command, return result.
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000012E1
# [0512H]=SCSI Command Pointer
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000012E4
# [0514H]=SCSI Command Segment
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000012E7
# [0516H]=(Prob)Data Destination Pointer
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000012EA
# [0518H]=(Prob)Data Destination Segment
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000134B
# [SI+02H]=0C32H
R 
L 
P 
% 0
M 0
/end
/begin0
T 2
* 00000421:0000134F
# 
R 
L DISKBIOS:SCSI Data Transfer Loop
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001351
# Jump if (MSG==1 || C/D==1(CMD/STA/MSG))
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001355
# Jump if REQ==0 (No Transfer Request)
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001357
# MSG=0 && C/D==0 && REQ==1 to come here. (Data phase)
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001367
# [SI+02H]=0C32H
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000136D
# Jump if BUSY
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000136F
# (Prob)Status Byte
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001373
# (Prob)Message Byte
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00001379
# [0516H]=(Prob)Data Destination Pointer
R 
L DISKBIOS:SCSI DMA Transfer
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000137D
# [0518H]=(Prob)Data Destination Segment
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000138B
# [SI+0AH]=00A4H DMA Address Register Low
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001391
# [SI+0CH]=00A4H DMA Address Register High
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000013A5
# [SI+08H]=00A2H DMA Count Register
R 
L 
P 
% 0
M 0
/end
/begin0
T 2
* 00000421:000013B5
# 
R 
L Wait for DMA transfer end?
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000013BE
# [SI+02H]=0C32H
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000013C5
# Jump if Ready
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000013C9
# Jump if MSG or CMD/STA/MSG
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000013EB
# Jump if Ready
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000013EF
# Jump if MSG or CMD/STA/MSG
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:0000140B
# 
R 
L DISKBIOS:SCSI Wait Ready or TimeOut
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000140D
# [SI+02H]=0C32H
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00001445
# [0511H] is it SCSI ID bits?
R 
L DISKBIOS:(Prob)Set SCSI ID Bits and SEL
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001450
# [SI+04H]=0C30H
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001456
# [SI+02H]=0C32H
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000145C
# Jump if BUSY
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001464
# [SI+04H]=0C30H
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:0000146B
# [051CH]=Command Counter
R 
L DISKBIOS:INT 48H Command Out Handler
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000146F
# [SI]=0C30H
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001472
# [0512H]=SCSI Command Pointer
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00001483
# [SI]=0C30H
R 
L DISKBIOS:INT 48H Status Handler
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001486
# [051AH]=Status byte?
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:0000148A
# [SI]=0C30H
R 
L DISKBIOS:INT 48H Message-IN Handler
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000148D
# [051BH]=Message byte?
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00001492
# 
R 
L DISKBIOS:SCSI Select DMA Channel
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:00001498
# 
R 
L DISKBIOS:SCSI Prepare DMA Not setting ADDR
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:000014AF
# 
R 
L DISKBIOS:SCSI Set DMA Mode
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:000014BA
# 
R 
L DISKBIOS:SCSI (Prob)SEG:OFFSET to Physical Addr
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:000014CB
# 
R 
L DISKBIOS:Wait SCSI BUSY or TimeOut
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000014DF
# Jump if Ready (BUSY=0)
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:000014F9
# 
R 
L DISKBIOS:IF [0529H]!=80H THEN [0529H]=82H:Erase Timer
P 
% 0
M 0
/end
/begin0
T 4
* 00000421:0000150D
# 
R 
L Jump Table for SCSI Phase
P 
% 16
M 0
/end
/begin0
T 1
* 00000421:0000151D
# 
R 
L DISKBIOS:SCSI INT 48H Handler (CMD, STA, MSG-IN Phases)
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001525
# [SI+02H]=0C32H
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000152B
# Jump if no REQ
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000152F
# AL=IO|MSG|CD|0 Defines Phase [2] pp.263
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 00000421:0000153B
# 
R 
L DISKBIOS:SCSI Timer Call Back. IF [0529H]==80H THEN [0529H]=81H
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000015AD
# 
R 
L CDROM:BIOS_ENTRY
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001609
# 
R 
L CDROM:BRANCH_TO_FUNCTION
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000173F
# 
R 
L CDROM:FUNCTION_AH=05_READ_SECTOR_HSG
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001BD5
# 
R 
L CDROM:PROBABLY_DRIVE_AND_MPU_RESET
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001C83
# 
R 
L CDROM:ISSUE_A0H(08,01)_THEN_3FH(02,00,0B,08)_SETUP_IRQ_DATA_BLOCK
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001D5C
# 
R 
L CDROM:READ_SECTOR_MAIN
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00001D75
# 
R 
L CDROM:
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002053
# 
R 
L CDROM:MSF_TO_HSG
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002077
# 
R 
L CDROM:HSG_TO_MSF
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000020AC
# 
R 
L CDROM:BIN_TO_BCD
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000020C5
# 
R 
L CDROM:BCD_AL_TO_BIN_AL
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000020E8
# 
R 
L CDROM:MODE2READ_2336(920H)_BYTES
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000020F4
# 
R 
L CDROM:MODE1READ_2048(800H)_BYTES
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002100
# 
R 
L CDROM_RAWREAD_2340(924H)_BYTES
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000210C
# 
R 
L CDROM:ISSUE_DATA_TRANSFER_COMMAND_WAIT_FOR_COMPLETION
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002194
# 
R 
L CDROM:READ_TOC
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000219E
# 
R 
L CDROM:
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000022D7
# 
R 
L CDROM:CHECK_STATUS_CONVERT_TO_ERROR_IF_NOT_SUBQ_17H_18H_19H
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002401
# 
R 
L CDROM:ISSUE_COMMAND_A0H_SETSTATE_WITH_STATUS_REQUEST
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002408
# 
R 
L CDROM:ISSUE_COMMAND_A0H_SETSTATE_WITH_STATUS_REQUEST
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002411
# 
R 
L CDROM:ISSUE_COMMAND_A4(CDDASTOP)_THEN_A0_WAIT_FOR_ERR_OR_(2NDBYTE&0DH)!=0
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002451
# 
R 
L CDROM:ISSUE_COMMAND_3FH_UNKNOWN_COMMAND
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002473
# 
R 
L CDROM_ISSUE_COMMAND_A1(CDDASET)
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000248F
# 
R 
L CDROM:CHECK_STATUS_ERROR_IF_AL!=0_CHECK_SUBSEQUENT_STATUSCODE==AL
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000024C1
# 
R 
L CDROM:CLEAR_8BYTES_FROM_DS:57FH
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000024D7
# 
R 
L CDROM:CONVERT_8BYTES_TO_BCD_THEN_ISSUE_COMMAND_IN_DS:57EH
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000024DD
# 
R 
L CDROM:CONVERT_1BYTE_TO_BCD_THEN_ISSUE_COMMAND_IN_DS:57EH
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000024E7
# 
R 
L CDROM:CONVERT_PARAMS_TO_BCD_WAIT_DRY_THEN_ISSUE_COMMAND_IN_DS:57EH
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000251F
# 
R 
L CDROM:IF_STATUS_REQ_THEN_READ_TO_DS:587H_OR_HARD_ERROR_21H_0DH
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002565
# 
R 
L CDROM:IF_AH==0_CLEAR_ERROR_CODE_IN_DS:568H
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000256E
# 
R 
L CDROM:SETUP_DMA
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000025E2
# 
R 
L CDROM:STATUS_BYTES_IN_587H_TO_BIOS_ERROR_AH_CX
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000026F6
# 
R 
L CDROM:PROBABLY_CHECK_MEDIA_CHANGE_AND_CACHE_TOC_IF_CHANGED
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000275F
# 
R 
L CDROM:CACHE_TOC_DS:564,565,567=1,MEDIA_CHANGED_ERROR
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:0000277C
# 
R 
L CDROM:PROBABLY_CHECK_DRIVE_AND_MEDIA_STATUS
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000027D2
# 
R 
L CDROM:COPY_8BYTES_FROM_DS:57FH_TO_DS:599H
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000027DC
# 
R 
L CDROM:COPY_8BYTES_FROM_DS:599H_TO_DS:57FH
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000027F3
# 
R 
L CDROM:INT_FDH_CX=1EH_Probably_30us_WAIT
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:000027FB
# 
R 
L CDROM:SETUP_TIMER_FOR_TIMEOUT
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002845
# 
R 
L CDROM:TIMEOUT_TIMER_CALLBACK
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002850
# 
R 
L CDROM:INTERRUPT_HANDLER
P 
% 0
M 0
/end
/begin0
T 0
* 00000421:00002926
# 
R 
L CDROM:Probably_CACHE_TOC_IN_INTERNAL_BUFFER
P 
% 0
M 0
/end
/begin0
T 0
* 00000D47:0000057C
# 
R 
L CDROMBIOS:2ND_BYTE_OF_STATUS_CODE_IF_NO_ERROR(00H_xx_xx_xx)
P 
% 0
M 0
/end
/begin0
T 1
* 00000F45:00000AD0
# 
R 
L IO.SYS(?):SET_PALETTE
P 
% 0
M 0
/end
/begin0
T 0
* 00001048:00002C9C
# 
R 
L ????:SHOOT_INT_93H
P 
% 0
M 0
/end
/begin0
T 0
* 00001048:0000362D
# (Prob)Jump if 1.44MB?
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 00001048:00003632
# Jump if 2D/2DD
R 
L 
P 
% 0
M 0
/end
/begin0
T 2
* 00001048:00003697
# 
R 
L (Prob)Error:Single-Sided Disk Not Supported
P 
% 0
M 0
/end
/begin0
T 0
* 00001048:00004A89
# 
R 
L NOT_CX_Bytes_From_DS:[SI]
P 
% 0
M 0
/end
/begin0
T 0
* 00001048:00004AFB
# 
R 
L Calculate_Check_Sum
P 
% 0
M 0
/end
/begin0
T 0
* 00001048:00004C24
# 
R 
L Call[FFFB:0019]
P 
% 0
M 0
/end
/begin0
T 0
* 00001048:00004C2D
# 
R 
L Call[FFFB:001E]
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:000012D8
# 
R 
L DOS:LDS_SI,CS:[051EH]
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:000017A2
# 
R 
L DOS:
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:00001A58
# 
R 
L DOS:CAPITALIZE_AL
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:00001A64
# 
R 
L DOS:CX=STRLEN(DS:SI)
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:00001A72
# 
R 
L DOS:CX=STRLEN(DS:SI)
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:00001A7C
# 
R 
L DOS:SWAP(DS,ES);SWAP(SI,DI)
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:00001AE4
# 
R 
L DOS:NOP
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:00001AEC
# 
R 
L DOS:NOP
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:00004E1C
# 
R 
L DOS:IF_AL=='/'_THEN_AL=BACKSLASH;ZF=(AL==BACKSLASH);
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:00004E29
# 
R 
L DOS:(PROB)ZF=(AL_IS_NOT_THE_FIRST_BYTE_OF_KANJI)
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:000057F6
# 
R 
L DOS:
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:00006208
# 
R 
L DOS:(PROB)MAKE_FULL_PATH_NAME
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:0000659E
# 
R 
L DOS:GET_DRIVE_NUMBER_FROM_FILE_NAME_IN_AL
P 
% 0
M 0
/end
/begin0
T 0
* 00001679:000069A5
# 
R 
L IF(DOS:SS:[050DH]=FFH){CL=CH;SS[0508H]=CL;}
P 
% 0
M 0
/end
/begin0
T 0
* 00005844:000007DE
# 
R 
L CONTROL.EXE:LOAD_DRIVE_R.IMG_TO_PHYS:81000000
P 
% 0
M 0
/end
/begin0
T 0
* 00005844:000008B1
# 
R 
L CONTROL.EXE:(PROB)MAIN_FUNCTION
P 
% 0
M 0
/end
/begin0
T 0
* 00005844:00000C81
# 
R 
L CONTROL.EXE:SET_INT_E4H_HANDLER_IF_NOT_SET
P 
% 0
M 0
/end
/begin0
T 0
* 00005844:00000CEA
# 
R 
L CONTROL.EXE:INT_93H_AH=56H(RESUME)_THEN_INT_93H_AH_55H(PAUSE)_IF_PLAYING
P 
% 0
M 0
/end
/begin0
T 0
* 00005844:000017A2
# 
R 
L CONTROL.EXE:(PROB)LOAD_AND_INIT_OAK40ROM
P 
% 0
M 0
/end
/begin0
T 0
* 000059C4:00000010
# 
R 
L ????:INT_91H_AH=02H
P 
% 0
M 0
/end
/begin0
T 0
* 000059C4:00000015
# 
R 
L ????:INT_AFH_AH=05H_READ_SYSTEM_INFO_TO_DS:[0FF1H]_FD:[0FEFH]=3130H
P 
% 0
M 0
/end
/begin0
T 0
* 000059C4:000000F4
# 
R 
L ????:INT_93H_AX=52C0H_CH=FFH_SET_CDROM_AUTO_STOP_TIME
P 
% 0
M 0
/end
/begin0
T 0
* 000059C4:0000012B
# 
R 
L ????:ANALYZE_COMMAND_ARGS
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00000365
# Calling Get Keyboard State
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:0000036A
# Check Boot Key Combination 'DEBUG'
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:000005CA
# 5D00H='->' Icon. I've never seen it.
R 
L 
P 
% 0
M 0
/end
/begin0
T 2
* 0000FC00:0000060D
# 
R 
L SYSROM:Boot Device Loop
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:000006B6
# 4200H=CD-ROM Icon
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:000006EC
# 4700H=Hard Disk Icon
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:0000070E
# 4000H=Floppy Disk Icon
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00000718
# 4600H=External Floppy Disk Icon
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:0000071E
# (Prob)EDI=VRAM Pointer
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:0000072A
# 13900H='0',13A00H='1'
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:0000077A
# 
R 
L SYSROM:(Prob)Try One Boot Device
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:00000786
# 
R 
L SYSROM:Wait by Freerun Timer times C350H times.
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00000C53
# 5100H=Clock Icon
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:00000F07
# 
R 
L SYSROM:(Prob)Draw Icon
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:00000F7A
# 
R 
L SYSROM:(Prob)Call Native Mode Service Routine 0010:000000B7
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:00000FB6
# 
R 
L SYSROM:(Prob)Call Native Mode Service Routine 0010:000000CB
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:00000FCA
# 
R 
L SYSROM:(Prob)Memory Test
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001773
# 
R 
L Calculate_Checksum_52HBytes_From_DX
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:000017DB
# 
R 
L IN_AL,3000H+(DX-7C1H>=0?(DX-7C1H)/0400H:(DX<<1))
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:000017E7
# 
R 
L Read_TwoBytes_from_3000H+AL*2
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001A49
# 
R 
L SYSROM:HSG_TO_MSF
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001A60
# 
R 
L SYSROM:BIN_TO_BCD
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001AA2
# 
R 
L SYSROM:CDROM_READ_SECTOR_PARAM_IN_IO_3B60
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001AD6
# 
R 
L SYSROM:
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001B34
# 
R 
L SYSROM:CDROM_CMD_A0H_THEN_RECEIVE_STATUS_BYTES
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001B60
# 
R 
L SYSROM:STORE_00_TO_8BYTES_FROM_IO_3B60H
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001B75
# 
R 
L SYSROM:CDROM_WAIT_DRY_THEN_BIN_TO_BCD_THEN_ISSUE_CMD_IN_IO_3B50H
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001BF5
# 
R 
L SYSROM:CDROM_TRY_READ_STATUS_OR_RETURN{21,0D,00,00}_IF_NO_STATUS
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001C79
# 
R 
L SYSROM:UPDATE_DMA_COUNT_IF_NO_ERROR
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001C86
# 
R 
L SYSROM:SET_DMA_COUNT
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001C9D
# 
R 
L 
P 
% 0
M 1
/end
/begin0
T 0
* 0000FC00:00001CA8
# 
R 
L SYSROM:READ_DMA_ADDRESS_IN_BX_AX
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001CBF
# 
R 
L SYSROM:SETUP_DMA
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001CF7
# 
R 
L SYSROM:CDROM_TURN_ON_DMA_WAIT_FOR_DTSF_CLEAR
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001D5B
# 
R 
L SYSROM:CDROM_STATUS_IN_IO_3B70H_TO_BIOS_ERROR_CODE
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001E1F
# 
R 
L SYSROM:WAIT_30US_THEN_READ_ADDITIONA_STATUS_BYTES?
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00001E54
# 
R 
L SYSROM:CDROM_CMD_A0H_THEN_INTERPRET_STATUS
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:00001EB8
# 
R 
L SYSROM:JMP FC00:1EDA
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:00002293
# 
R 
L SYSROM:Set up DMA Address
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:000022B0
# 
R 
L 
P 
% 0
M 1
/end
/begin0
T 0
* 0000FC00:000022BC
# 
R 
L 
P 
% 0
M 1
/end
/begin0
T 0
* 0000FC00:00002405
# 
R 
L 
P 
% 0
M 1
/end
/begin0
T 2
* 0000FC00:0000298D
# 
R 
L SCSI:WAIT_READY_LOOP
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00002995
# Check REQ
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00002997
# Jump if no REQ
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:000029CC
# Check BUSY flag (1==BUSY)
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:00002A92
# 
R 
L SYSROM:Write AH to DMA mode-control register.
P 
% 0
M 1
/end
/begin0
T 0
* 0000FC00:00002AA9
# 
R 
L 
P 
% 0
M 1
/end
/begin0
T 0
* 0000FC00:00002AAF
# Jump if DMA count is up.
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00002AB1
# 
R 
L 
P 
% 0
M 1
/end
/begin0
T 0
* 0000FC00:00002AB7
# Jump if not DATA PHASE
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00002ABB
# Jump if BUSY
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00002AC5
# 
R 
L 
P 
% 0
M 1
/end
/begin0
T 0
* 0000FC00:00002AC9
# Jump if not BUSY
R 
L 
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00002ACF
# Jump if DATA PHASE
R 
L 
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:00002AD2
# 
R 
L SYSROM:DX|BX to Physical Address
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:00002AE4
# 
R 
L SYSROM:Set DMA Address and Count
P 
% 0
M 0
/end
/begin0
T 1
* 0000FC00:00002B00
# 
R 
L SYSROM:Enable (Unmask) DMA Channel 1
P 
% 0
M 0
/end
/begin0
T 0
* 0000FC00:00002ED2
# 
R 
L SYSROM:WAIT_BY_FREERUN_TIMER
P 
% 0
M 0
/end
/begin0
T 1
* 0000FFFB:00000000
# 
R 
L SYSROM:RESET_VECTOR_REIPL
P 
% 0
M 0
/end
/begin0
T 1
* 0000FFFB:00000005
# 
R 
L SYSROM:RESET_VECTOR_TOSV11
P 
% 0
M 0
/end
/begin0
T 1
* 0000FFFB:00000019
# 
R 
L SYSROM:(PROB)Service_Routine
P 
% 0
M 0
/end
/begin0
T 1
* FFFF0000:00000000
# 
R 
L NULL
P 
% 0
M 0
/end
/begin0
T 0
* FFFF0000:00BAA600
# 
R 
L 
P 
% 0
M 1
/end
